<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.diros.mapper.UserMapper">
<insert id="insert" parameterType="User">
	insert into USER(NAME,SEX,PWORD,REGIEST_DT,LAST_LOGIN_DT,EMAIL,NICK_NAME,LOCATION,LEVEL,FANS_COUNT,
	PHOTO,STATE)
		values ( 
		#{name,jdbcType=VARCHAR},
		#{sex,jdbcType=VARCHAR},
		#{pword,jdbcType=VARCHAR},
		#{regiestDt,jdbcType=TIMESTAMP},
		#{lastLoginDt,jdbcType=TIMESTAMP},
		#{email,jdbcType=VARCHAR},
		#{nickName,jdbcType=VARCHAR},
		#{location,jdbcType=VARCHAR},
		#{level,jdbcType=DECIMAL},
		#{fansCount,jdbcType=DECIMAL},
		#{photo,jdbcType=VARCHAR},
		#{state,jdbcType=DECIMAL})
</insert>
<resultMap type="User" id="userResultMap">
	<id property="userId" column="USER_ID" />  
    <result property="name" column="NAME" />  
    <result property="pword" column="PWORD" />
	<result property="regiestDt" column="REGIEST_DT" />
	<result property="lastLoginDt" column="LAST_LOGIN_DT" />
	<result property="nickName" column="NICK_NAME" />
	<result property="location" column="LOCATION" />
	<result property="level" column="LEVEL" />
	<result property="fansCount" column="FANS_COUNT" />
	<result property="photo" column="PHOTO" />
	<result property="email" column="email" />
	<result property="state" column="u_state" />
</resultMap>
	<!-- 修改 -->
	<update id="update" parameterType="User">
		update User
		<set>
			<if test="name != null">
				NAME = #{name},
			</if>
			<if test="sex != null">
				SEX = #{sex},
			</if>
			<if test="regiestDt != null">
				REGIEST_DT = #{regiestDt,jdbcType=TIMESTAMP},
			</if>			
			<if test="lastLoginDt != null">
				LAST_LOGIN_DT = #{lastLoginDt,jdbcType=TIMESTAMP},
			</if>			
			<if test="email != null">
				EMAIL = #{email,jdbcType=VARCHAR},
			</if>			
			<if test="nickName != null">
				NICK_NAME = ##{nickName,jdbcType=VARCHAR},
			</if>			
			<if test="location != null">
				LOCATION = #{location,jdbcType=VARCHAR},
			</if>			
			<if test="level != 0">
				LEVEL = #{level,jdbcType=DECIMAL},
			</if>					
			<if test="fansCount != 0">
				FANS_COUNT = #{fansCount,jdbcType=DECIMAL},
			</if>			
			<if test="photo != null">
				PHOTO = #{photo,jdbcType=VARCHAR},
			</if>			
			<if test="state != -100">
				STATE = #{state,jdbcType=DECIMAL},
			</if>			
		</set>
		where user_id=#{userId}
	</update>
	
	<select id="basicLogin" parameterType="User" resultType="User">
		select *, user_id as userId from user where name=#{name} and pword=#{pword}
	</select>
	
	<!-- 删除 -->
	<delete id="delete" parameterType="int">
		delete from User where user_id=#{userId}
	</delete>
	<!-- 总查询 -->
	<select id="selectAll" resultType="User">
		select *, user_id as userId from User
	</select>
	<!-- 通过id查询 -->
	<select id="findById" parameterType="int" resultType="User">
		select *, user_id as userId from User where user_id=#{userId}
	</select>
	<!-- 分页查询 -->
	<!-- <select id="selectPage" parameterType="Paging" resultType="Tem"> 
 	 <![CDATA[	SELECT * FROM (SELECT T.*,ROWNUM AS RN FROM(
				select * from Tem order by id asc
				) T WHERE  ROWNUM <= 10) WHERE RN > 1
 	  ]]>
	</select> -->
	<!-- 查询总数 -->
	<select id="count"  resultType="int">
		select count(*) FROM User
	</select>
	<!-- 模糊查询包含分页 -->
	<!-- <select id="selectByNameAndKey"  resultType="Bpm">
		SELECT * FROM (SELECT T.*,ROWNUM AS RN FROM(
				select * from(
		select * from BPM 
		<where>
			<if test="bpm_name != null">
				bpm_name like '%'||#{name}||'%' and
			</if>
			<if test="bpm_code != null">
				bpm_code like '%'||#{key}||'%'
			</if>
		</where>
		<![CDATA[ 
		) T WHERE  ROWNUM <= #{paging.startRow,jdbcType=DECIMAL}+#{paging.counts,jdbcType=DECIMAL}) 
				WHERE RN > #{paging.startRow,jdbcType=DECIMAL}
				]]>
	</select> -->

	<select id="countsOfGivenName"  resultType="int">
		select count(*) FROM User t where t.name =  #{name}
	</select>
	
	<select id="findByUserName" parameterType="String" resultType="User">
		select *, user_id as userId FROM User t where t.name =  #{userName}
	</select>

  	<update id="modifyPassword" parameterType="User">
		update User u
		set u.pword =#{pword}
		where u.user_id=#{userId}
	</update>
</mapper>